version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: jobcore-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: jobcore
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - jobcore-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: jobcore-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - jobcore-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Typesense Search Engine
  typesense:
    image: typesense/typesense:0.25.2
    container_name: jobcore-typesense
    restart: unless-stopped
    ports:
      - "8108:8108"
    volumes:
      - typesense_data:/data
    command: '--data-dir /data --api-key=xyz --enable-cors'
    networks:
      - jobcore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Development Mode)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jobcore-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      typesense:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/jobcore?authSource=admin
      - TYPESENSE_HOST=typesense
      - TYPESENSE_PORT=8108
      - TYPESENSE_PROTOCOL=http
      - TYPESENSE_API_KEY=xyz
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=redis123
      # External services
      - SUPABASE_URL=${VITE_SUPABASE_URL}
      - SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    networks:
      - jobcore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App (Development Mode)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: jobcore-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"  # Vite default port
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://localhost:5000  # Backend API accessible from browser
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./vite.config.js:/app/vite.config.js
      - frontend_node_modules:/app/node_modules
    networks:
      - jobcore-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: jobcore-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # Added HTTPS support
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    networks:
      - jobcore-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  typesense_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  jobcore-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16